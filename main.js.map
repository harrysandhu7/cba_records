{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cba-views/cba-views.module.ts","webpack:///./src/app/cba-views/components/cba-views.component.html","webpack:///./src/app/cba-views/components/cba-views.component.scss","webpack:///./src/app/cba-views/components/cba-views.component.ts","webpack:///./src/app/cba-views/components/options/options.component.html","webpack:///./src/app/cba-views/components/options/options.component.scss","webpack:///./src/app/cba-views/components/options/options.component.ts","webpack:///./src/app/cba-views/components/warrants/warrants.component.html","webpack:///./src/app/cba-views/components/warrants/warrants.component.scss","webpack:///./src/app/cba-views/components/warrants/warrants.component.ts","webpack:///./src/app/cba-views/services/cba-views.service.ts","webpack:///./src/app/cba-views/services/http-error-handler.service.ts","webpack:///./src/app/in-memory-data.service.ts","webpack:///./src/app/material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: ` <cba-views></cba-views>`,\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CBAViewsModule } from './cba-views/cba-views.module';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    CBAViewsModule,\n    HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, {\n      dataEncapsulation: false,\n      passThruUnknownUrl: true,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { MaterialModule } from '../material.module';\nimport { CBAViewsService } from './services/cba-views.service';\nimport { HttpErrorHandler } from './services/http-error-handler.service';\n\nimport { OptionsComponent } from './components/options/options.component';\nimport { WarrantsComponent } from './components/warrants/warrants.component';\nimport { CBAViewsComponent } from './components/cba-views.component';\n\n@NgModule({\n  imports: [MaterialModule, HttpClientModule, BrowserModule],\n  exports: [CBAViewsComponent],\n  declarations: [OptionsComponent, WarrantsComponent, CBAViewsComponent],\n  providers: [CBAViewsService, HttpErrorHandler],\n})\nexport class CBAViewsModule {}\n","module.exports = \"<div class=\\\"outer-wrapper\\\">   <div class=\\\"wrapper-fluid\\\">\\n    <mat-tab-group animationDuration=\\\"0ms\\\">\\n      <mat-tab label=\\\"Warrants\\\"><app-warrants></app-warrants></mat-tab>\\n      <mat-tab label=\\\"Options\\\"><app-options></app-options></mat-tab>\\n    </mat-tab-group>\\n  </div>\\n</div>\\n\"","module.exports = \".outer-wrapper {\\n  background-color: #f3f3f3;\\n  min-height: 100%; }\\n  .outer-wrapper .wrapper-fluid {\\n    width: 90%;\\n    margin: 0 auto; }\\n  .outer-wrapper .wrapper-fluid /deep/ .mat-tab-header {\\n      border: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9oYXJ2aW5kZXIuc2luZ2gvRG9jdW1lbnRzL0NvZGUvY2JhLXRlc3Qvc3JjL2FwcC9jYmEtdmlld3MvY29tcG9uZW50cy9jYmEtdmlld3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBeUI7RUFDekIsZ0JBQWdCLEVBQUE7RUFGbEI7SUFLSSxVQUFVO0lBQ1YsY0FBYyxFQUFBO0VBTmxCO01BUU0sWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY2JhLXZpZXdzL2NvbXBvbmVudHMvY2JhLXZpZXdzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm91dGVyLXdyYXBwZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmM2YzO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuXG4gIC53cmFwcGVyLWZsdWlkIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIC9kZWVwLyAubWF0LXRhYi1oZWFkZXIge1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgIH1cbiAgfVxufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cba-views',\n  templateUrl:   './cba-views.component.html',\n  styleUrls: ['./cba-views.component.scss'],\n})\n\nexport class CBAViewsComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() { }\n}\n","module.exports = \"<div class=\\\"heading-wrapper clearfix\\\">\\n    <div class=\\\"heading-content\\\"> Call Options</div>\\n  </div>\\n\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <!-- code Column -->\\n  <ng-container matColumnDef=\\\"code\\\">\\n    <th mat-header-cell *matHeaderCellDef> Code </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.code}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"bid\\\">\\n    <th mat-header-cell *matHeaderCellDef> bid ($)</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.bid}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"offer\\\">\\n    <th mat-header-cell *matHeaderCellDef> offer  ($)</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.offer}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"openInterest\\\">\\n    <th mat-header-cell *matHeaderCellDef> open Int. </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.openInterest}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"volume\\\">\\n    <th mat-header-cell *matHeaderCellDef> volume </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.volume}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"lastTrade\\\">\\n    <th mat-header-cell *matHeaderCellDef> last trade ($)</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastTrade}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"strikePrice\\\">\\n    <th mat-header-cell *matHeaderCellDef> strike price ($)</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.strikePrice}} </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    <!-- Group header -->\\n    <ng-container matColumnDef=\\\"groupHeader\\\">\\n      <td colspan=\\\"999\\\" mat-cell *matCellDef=\\\"let groupBy\\\"><strong>Expiry: {{groupBy.expiryDate|date:'EEEE, d MMM y'}}</strong></td>\\n    </ng-container>\\n\\n    <tr mat-row *matRowDef=\\\"let row; columns: ['groupHeader']; when: isGroup\\\">\\n</table>\\n\"","module.exports = \".mat-cell.cdk-column-groupHeader {\\n  color: black;\\n  background-color: #f3f3f3; }\\n  .mat-cell.cdk-column-groupHeader strong {\\n    font-weight: normal; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9oYXJ2aW5kZXIuc2luZ2gvRG9jdW1lbnRzL0NvZGUvY2JhLXRlc3Qvc3JjL2FwcC9jYmEtdmlld3MvY29tcG9uZW50cy9vcHRpb25zL29wdGlvbnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1oseUJBQXlCLEVBQUE7RUFGM0I7SUFJSSxtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NiYS12aWV3cy9jb21wb25lbnRzL29wdGlvbnMvb3B0aW9ucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2VsbC5jZGstY29sdW1uLWdyb3VwSGVhZGVyIHtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmM2YzO1xuICBzdHJvbmcge1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIH1cbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\n\nimport { CBAViewsService } from '../../services/cba-views.service';\nimport { OptionDetails } from '../../models/option.model';\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.scss'],\n})\nexport class OptionsComponent implements OnInit {\n  dataSource;\n  displayedColumns: string[] = [\n    'code',\n    'bid',\n    'offer',\n    'openInterest',\n    'volume',\n    'lastTrade',\n    'strikePrice',\n  ];\n\n  constructor(private viewsService: CBAViewsService) {}\n\n  ngOnInit() {\n    this._populateOptions();\n  }\n\n  private _populateOptions() {\n    this.viewsService.getOptions().subscribe((options: OptionDetails[]) => {\n      this.dataSource = new MatTableDataSource(\n        this._transformTableData(options),\n      );\n    });\n  }\n\n  private _transformTableData(optionsDetails: OptionDetails[]): any {\n    let rows = [];\n    optionsDetails.forEach(optionDetail => {\n      rows.push({ expiryDate: optionDetail.expiryDate, isGroupBy: true });\n      rows = [...rows, ...optionDetail.options];\n    });\n    return rows;\n  }\n\n  isGroup(index, item): boolean {\n    return item.isGroupBy;\n  }\n}\n","module.exports = \"<div class=\\\"heading-wrapper clearfix\\\">\\n  <div class=\\\"heading-content\\\"> Barrier Instalment</div>\\n  <div class=\\\"filter-wrapper\\\">\\n    <mat-form-field>\\n      <mat-select\\n        placeholder=\\\"Type\\\"\\n        (selectionChange)=\\\"applyFilters($event.value)\\\"\\n      >\\n        <mat-option *ngFor=\\\"let filter of filters\\\" [value]=\\\"filter.type\\\">{{\\n          filter.type\\n        }}</mat-option>\\n        <mat-option [value]=\\\"\\\">All</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n</div>\\n\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"code\\\">\\n    <th mat-header-cell *matHeaderCellDef>Code</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">{{ element.code }}</td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"issuer\\\">\\n    <th mat-header-cell *matHeaderCellDef>issuer</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">{{ element.issuer }}</td>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container matColumnDef=\\\"exercisePrice\\\">\\n    <th mat-header-cell *matHeaderCellDef>Exercise Price ($)</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">{{ element.exercisePrice }}</td>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"multiplier\\\">\\n    <th mat-header-cell *matHeaderCellDef>multiplier</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">{{ element.multiplier }}</td>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"bid\\\">\\n    <th mat-header-cell *matHeaderCellDef>bid ($)</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">{{ element.bid }}</td>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"offer\\\">\\n    <th mat-header-cell *matHeaderCellDef>offer ($)</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">{{ element.offer }}</td>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"volume\\\">\\n    <th mat-header-cell *matHeaderCellDef>volume</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">{{ element.volume }}</td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n</table>\\n\"","module.exports = \".heading-wrapper .filter-wrapper {\\n  float: right; }\\n\\n.heading-wrapper .mat-form-field .mat-form-field-wrapper {\\n  float: right; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9oYXJ2aW5kZXIuc2luZ2gvRG9jdW1lbnRzL0NvZGUvY2JhLXRlc3Qvc3JjL2FwcC9jYmEtdmlld3MvY29tcG9uZW50cy93YXJyYW50cy93YXJyYW50cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUVJLFlBQVksRUFBQTs7QUFGaEI7RUFNTSxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jYmEtdmlld3MvY29tcG9uZW50cy93YXJyYW50cy93YXJyYW50cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLmhlYWRpbmctd3JhcHBlciB7XG4gIC5maWx0ZXItd3JhcHBlciB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICB9XG4gIC5tYXQtZm9ybS1maWVsZCB7XG4gICAgLm1hdC1mb3JtLWZpZWxkLXdyYXBwZXIge1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgIH1cbiAgfVxufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\n\nimport { CBAViewsService } from '../../services/cba-views.service';\nimport { Warrant, Filter } from '../../models/warrant.model';\n\n@Component({\n  selector: 'app-warrants',\n  templateUrl: './warrants.component.html',\n  styleUrls: ['./warrants.component.scss'],\n})\nexport class WarrantsComponent implements OnInit {\n  displayedColumns: string[] = [\n    'code',\n    'issuer',\n    'exercisePrice',\n    'multiplier',\n    'bid',\n    'offer',\n    'volume',\n  ];\n  dataSource;\n  filters;\n\n  constructor(private viewsService: CBAViewsService) {}\n\n  ngOnInit() {\n    this._populateWarrants();\n    this._populateFilters();\n  }\n\n  private _populateWarrants() {\n    this.viewsService\n      .getWarrants()\n      .subscribe(\n        (warrants: Warrant[]) =>\n          (this.dataSource = new MatTableDataSource(warrants)),\n      );\n  }\n\n  private _populateFilters() {\n    this.viewsService\n      .getFilters()\n      .subscribe((filters: Filter[]) => (this.filters = filters));\n  }\n\n  applyFilters(filterValue: Array<string>) {\n    this.dataSource.filter = filterValue;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpErrorHandler, HandleError } from './http-error-handler.service';\nimport { Warrant, Filter } from '../models/warrant.model';\nimport { OptionDetails } from '../models/option.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CBAViewsService {\n  private handleError: HandleError;\n  constructor(private http: HttpClient, httpErrorHandler: HttpErrorHandler) {\n    this.handleError = httpErrorHandler.createHandleError('CBAViewsService');\n  }\n\n  getWarrants(): Observable<Warrant[]> {\n    return this.http.get<any[]>('api/warrants').pipe(\n      map((resp: any) => resp.default.warrants),\n      catchError(this.handleError('getWarrants', [])),\n    );\n  }\ngetFilters(): Observable<Filter[]> {\n    return this.http.get<any[]>('api/warrants').pipe(\n      map((resp: any) => resp.default.filter),\n      catchError(this.handleError('getFilters', [])),\n    );\n  }\ngetOptions(): Observable<OptionDetails[]> {\n    return this.http.get<any[]>('api/options').pipe(\n      map((resp: any) => resp.default.optionDetails),\n      catchError(this.handleError('getOptions', [])),\n    );\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\n\n/** Type of the handleError function returned by HttpErrorHandler.createHandleError */\nexport type HandleError =\n  <T> (operation?: string, result?: T) => (error: HttpErrorResponse) => Observable<T>;\n\n/** Handles HttpClient errors */\n@Injectable()\nexport class HttpErrorHandler {\n  constructor() { }\n\n  /** Create curried handleError function that already knows the service name */\n  createHandleError = (serviceName = '') => <T>\n    (operation = 'operation', result = {} as T) => this.handleError(serviceName, operation, result)\n\n  /**\n   * Returns a function that handles Http operation failures.\n   * This error handler lets the app continue to run as if no error occurred.\n   * @param serviceName = name of the data service that attempted the operation\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  handleError<T> (serviceName = '', operation = 'operation', result = {} as T) {\n\n    return (error: HttpErrorResponse): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      const message = (error.error instanceof ErrorEvent) ?\n        error.error.message :\n       `server returned code ${error.status}`;\n\n      console.log(`${serviceName}: ${operation} failed: ${message}`);\n\n      // Let the app keep running by returning a safe result.\n      return of( result );\n    };\n\n  }\n}\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\nimport * as options from '../assets/data/options.json';\nimport * as warrants from '../assets/data/warrants.json';\n\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    return {options, warrants};\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport {\n  MatTableModule,\n  MatTabsModule,\n  MatSelectModule,\n  MatFormFieldModule, MatInputModule,\n  MatCommonModule,\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatTableModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatFormFieldModule, MatInputModule,\n    MatCommonModule,\n  ],\n  exports: [\n    MatTableModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatFormFieldModule, MatInputModule,\n    MatCommonModule,\n  ],\n  declarations: [],\n  providers: [],\n})\nexport class MaterialModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}